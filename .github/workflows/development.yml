# NQBA Platform - Development CI/CD Pipeline
# Fast feedback loop for development branches

name: Development Pipeline

on:
  push:
    branches:
      - develop
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - develop
      - main

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # =============================================================================
  # Quick Code Quality Checks
  # =============================================================================
  quick-checks:
    name: Quick Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dev dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort flake8 mypy
    
    - name: Check code formatting
      run: |
        black --check --diff .
        isort --check-only --diff .
    
    - name: Run linting
      run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Type checking (critical errors only)
      run: mypy src/ --error-summary || true

  # =============================================================================
  # Fast Test Suite
  # =============================================================================
  fast-tests:
    name: Fast Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_USER: test_user
          POSTGRES_DB: test_nqba
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
    
    - name: Set up test environment
      run: |
        echo "DATABASE_URL=postgresql://test_user:test_password@localhost:5432/test_nqba" > .env.test
        echo "REDIS_URL=redis://localhost:6379/0" >> .env.test
        echo "ENVIRONMENT=test" >> .env.test
        echo "SECRET_KEY=test-secret-key-for-development" >> .env.test
    
    - name: Run unit tests (fast subset)
      run: |
        pytest tests/unit/ -v --tb=short -x --maxfail=5
    
    - name: Run critical integration tests
      run: |
        pytest tests/integration/ -v --tb=short -x --maxfail=3 -k "critical or smoke"

  # =============================================================================
  # Build Development Images
  # =============================================================================
  build-dev:
    name: Build Dev Images
    runs-on: ubuntu-latest
    needs: [quick-checks, fast-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build API image (dev)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deploy/docker/Dockerfile.api
        target: development
        tags: nqba-platform/api:dev-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
    
    - name: Build Worker image (dev)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: deploy/docker/Dockerfile.worker
        target: development
        tags: nqba-platform/worker:dev-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
    
    - name: Test container startup
      run: |
        # Test API container
        docker run --rm -d --name test-api \
          -e DATABASE_URL=sqlite:///tmp/test.db \
          -e REDIS_URL=redis://localhost:6379 \
          -p 8000:8000 \
          nqba-platform/api:dev-${{ github.sha }}
        
        sleep 10
        
        # Check if container is running
        docker ps | grep test-api
        
        # Test health endpoint
        curl -f http://localhost:8000/health || exit 1
        
        # Cleanup
        docker stop test-api

  # =============================================================================
  # Deploy to Development Environment
  # =============================================================================
  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: build-dev
    if: github.ref == 'refs/heads/develop'
    environment:
      name: development
      url: https://dev-api.nqba.flyfox.ai
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    
    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region us-west-2 --name nqba-dev-cluster
    
    - name: Deploy to development
      run: |
        # Update image tags for development
        sed -i "s|nqba-platform/api:latest|nqba-platform/api:dev-${{ github.sha }}|g" deploy/k8s/api-deployment.yaml
        sed -i "s|nqba-platform/worker:latest|nqba-platform/worker:dev-${{ github.sha }}|g" deploy/k8s/worker-deployment.yaml
        
        # Apply minimal manifests for dev environment
        kubectl apply -f deploy/k8s/namespace.yaml
        kubectl apply -f deploy/k8s/api-deployment.yaml
        kubectl apply -f deploy/k8s/worker-deployment.yaml
        
        # Wait for rollout (shorter timeout for dev)
        kubectl rollout status deployment/nqba-api -n nqba-platform --timeout=180s
        kubectl rollout status deployment/nqba-worker -n nqba-platform --timeout=180s
    
    - name: Basic smoke test
      run: |
        kubectl wait --for=condition=ready pod -l app=nqba-platform,component=api -n nqba-platform --timeout=120s
        
        API_URL=$(kubectl get service nqba-api -n nqba-platform -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        curl -f "http://${API_URL}/health" || exit 1

  # =============================================================================
  # Notification
  # =============================================================================
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quick-checks, fast-tests, build-dev, deploy-dev]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.quick-checks.result == 'success' && needs.fast-tests.result == 'success'
      run: |
        echo "✅ Development pipeline completed successfully!"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
    
    - name: Notify on failure
      if: needs.quick-checks.result == 'failure' || needs.fast-tests.result == 'failure'
      run: |
        echo "❌ Development pipeline failed!"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Please check the logs and fix the issues."
        exit 1