# NQBA Platform - Network Security Policies
# Implements zero-trust networking with strict ingress/egress controls

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nqba-api-network-policy
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
  annotations:
    kubernetes.io/description: "Network policy for NQBA API server with strict access controls"
spec:
  podSelector:
    matchLabels:
      app: nqba-api
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress Rules - What can connect TO the API server
  ingress:
  # Allow ingress from load balancer/ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 9090  # Metrics endpoint
  
  # Allow ingress from same namespace (for health checks)
  - from:
    - podSelector:
        matchLabels:
          app: nqba-platform
    ports:
    - protocol: TCP
      port: 8000
  
  # Egress Rules - What the API server can connect TO
  egress:
  # Allow egress to PostgreSQL
  - to:
    - podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow egress to Redis
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow egress to external APIs (DNS resolution)
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow egress to external HTTPS APIs
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow egress to external HTTP (for health checks, webhooks)
  - to: []
    ports:
    - protocol: TCP
      port: 80

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nqba-database-network-policy
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
spec:
  podSelector:
    matchLabels:
      app: postgres
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress Rules - What can connect TO the database
  ingress:
  # Allow ingress from API server only
  - from:
    - podSelector:
        matchLabels:
          app: nqba-api
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow ingress from backup jobs
  - from:
    - podSelector:
        matchLabels:
          app: backup-job
    ports:
    - protocol: TCP
      port: 5432
  
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 5432
  
  # Egress Rules - Database should have minimal egress
  egress:
  # Allow DNS resolution only
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nqba-redis-network-policy
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress Rules - What can connect TO Redis
  ingress:
  # Allow ingress from API server only
  - from:
    - podSelector:
        matchLabels:
          app: nqba-api
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow ingress from worker pods
  - from:
    - podSelector:
        matchLabels:
          app: nqba-worker
    ports:
    - protocol: TCP
      port: 6379
  
  # Allow ingress from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 6379
  
  # Egress Rules - Redis should have minimal egress
  egress:
  # Allow DNS resolution only
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Default deny-all policy for the namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
  annotations:
    kubernetes.io/description: "Default deny-all policy - all traffic must be explicitly allowed"
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow kube-system access for essential cluster functions
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kube-system
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress from kube-system (for kubelet, kube-proxy, etc.)
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  
  egress:
  # Allow egress to kube-system
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
  
  # Allow egress to Kubernetes API server
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443

---
# Allow monitoring access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-monitoring
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: network-policy
    environment: production
spec:
  podSelector:
    matchLabels:
      monitoring: "true"
  policyTypes:
  - Ingress
  
  ingress:
  # Allow ingress from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: prometheus
    - namespaceSelector:
        matchLabels:
          name: grafana
    ports:
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 3000