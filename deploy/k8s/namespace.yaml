apiVersion: v1
kind: Namespace
metadata:
  name: nqba-platform
  labels:
    name: nqba-platform
    environment: production
    project: nqba-platform
    managed-by: terraform
  annotations:
    description: "NQBA Platform production namespace"
    contact: "engineering@flyfox.ai"

---
apiVersion: v1
kind: Secret
metadata:
  name: nqba-secrets
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: secrets
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  database-url: cG9zdGdyZXNxbDovL3VzZXI6cGFzc3dvcmRAaG9zdDpwb3J0L2RhdGFiYXNl  # postgresql://user:password@host:port/database
  redis-url: cmVkaXM6Ly86cGFzc3dvcmRAaG9zdDpwb3J0LzA=  # redis://:password@host:port/0
  secret-key: eW91ci1zZWNyZXQta2V5LWhlcmU=  # your-secret-key-here
  dynex-api-key: eW91ci1keW5leC1hcGkta2V5  # your-dynex-api-key
  openai-api-key: eW91ci1vcGVuYWktYXBpLWtleQ==  # your-openai-api-key
  jwt-secret: eW91ci1qd3Qtc2VjcmV0LWtleQ==  # your-jwt-secret-key
  encryption-key: eW91ci1lbmNyeXB0aW9uLWtleQ==  # your-encryption-key

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nqba-config
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: config
data:
  # Application configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  
  # API configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  API_WORKERS: "4"
  API_TIMEOUT: "300"
  
  # Worker configuration
  WORKER_CONCURRENCY: "4"
  WORKER_PREFETCH_MULTIPLIER: "1"
  WORKER_MAX_TASKS_PER_CHILD: "1000"
  
  # Quantum configuration
  QUANTUM_BACKEND: "dynex"
  QUANTUM_TIMEOUT: "600"
  QUANTUM_MAX_RETRIES: "3"
  
  # Cache configuration
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"
  
  # Rate limiting
  RATE_LIMIT_REQUESTS: "1000"
  RATE_LIMIT_WINDOW: "3600"
  
  # Monitoring
  METRICS_ENABLED: "true"
  TRACING_ENABLED: "true"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Security
  CORS_ORIGINS: "https://nqba.flyfox.ai,https://app.nqba.flyfox.ai"
  ALLOWED_HOSTS: "nqba.flyfox.ai,app.nqba.flyfox.ai,localhost"
  
  # File upload
  MAX_FILE_SIZE: "100MB"
  ALLOWED_FILE_TYPES: "pdf,txt,csv,json,xlsx"
  
  # Database
  DB_POOL_SIZE: "20"
  DB_MAX_OVERFLOW: "30"
  DB_POOL_TIMEOUT: "30"
  DB_POOL_RECYCLE: "3600"
  
  # Redis
  REDIS_POOL_SIZE: "20"
  REDIS_TIMEOUT: "5"
  
  # AWS
  AWS_DEFAULT_REGION: "us-west-2"
  AWS_S3_BUCKET: "nqba-prod-storage"
  
  # Feature flags
  FEATURE_QUANTUM_ENABLED: "true"
  FEATURE_CLASSICAL_FALLBACK: "true"
  FEATURE_BATCH_PROCESSING: "true"
  FEATURE_REAL_TIME_PROCESSING: "true"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nqba-platform
  namespace: nqba-platform
  labels:
    app: nqba-platform
    component: serviceaccount
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/nqba-platform-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: nqba-platform
  name: nqba-platform-role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nqba-platform-rolebinding
  namespace: nqba-platform
subjects:
- kind: ServiceAccount
  name: nqba-platform
  namespace: nqba-platform
- kind: ServiceAccount
  name: nqba-api
  namespace: nqba-platform
- kind: ServiceAccount
  name: nqba-worker
  namespace: nqba-platform
roleRef:
  kind: Role
  name: nqba-platform-role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nqba-platform-network-policy
  namespace: nqba-platform
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: nqba-platform
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
  - from: []
    ports:
    - protocol: TCP
      port: 8000  # API port
    - protocol: TCP
      port: 9090  # Metrics port
  egress:
  - {}  # Allow all egress traffic

---
apiVersion: v1
kind: LimitRange
metadata:
  name: nqba-platform-limits
  namespace: nqba-platform
spec:
  limits:
  - default:
      cpu: "2000m"
      memory: "4Gi"
    defaultRequest:
      cpu: "100m"
      memory: "128Mi"
    type: Container
  - max:
      cpu: "8000m"
      memory: "16Gi"
    min:
      cpu: "50m"
      memory: "64Mi"
    type: Container
  - max:
      storage: "100Gi"
    type: PersistentVolumeClaim

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: nqba-platform-quota
  namespace: nqba-platform
spec:
  hard:
    requests.cpu: "20"
    requests.memory: "40Gi"
    limits.cpu: "40"
    limits.memory: "80Gi"
    persistentvolumeclaims: "10"
    pods: "50"
    services: "20"
    secrets: "20"
    configmaps: "20"
    count/deployments.apps: "20"
    count/jobs.batch: "50"
    count/cronjobs.batch: "10"