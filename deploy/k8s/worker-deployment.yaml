apiVersion: apps/v1
kind: Deployment
metadata:
  name: nqba-worker
  namespace: nqba-platform
  labels:
    app: nqba-worker
    component: worker
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nqba-worker
  template:
    metadata:
      labels:
        app: nqba-worker
        component: worker
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nqba-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker
        image: nqba/worker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKER_TYPE
          value: "quantum"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: DYNEX_API_KEY
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: dynex-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: openai-api-key
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: PROMETHEUS_MULTIPROC_DIR
          value: "/tmp/prometheus"
        - name: JAEGER_AGENT_HOST
          value: "jaeger-agent"
        - name: JAEGER_AGENT_PORT
          value: "6831"
        resources:
          requests:
            cpu: 1000m
            memory: 2Gi
          limits:
            cpu: 4000m
            memory: 8Gi
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "celery -A nqba_stack.worker inspect ping"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "celery -A nqba_stack.worker inspect ping"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: prometheus-multiproc
          mountPath: /tmp/prometheus
        - name: worker-data
          mountPath: /app/data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: prometheus-multiproc
        emptyDir: {}
      - name: worker-data
        emptyDir:
          sizeLimit: 10Gi
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - nqba-worker
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: In
                values:
                - c5.xlarge
                - c5.2xlarge
                - m5.xlarge
                - m5.2xlarge
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "spot-instance"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nqba-worker-batch
  namespace: nqba-platform
  labels:
    app: nqba-worker-batch
    component: worker
    workload-type: batch
    version: v1
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nqba-worker-batch
  template:
    metadata:
      labels:
        app: nqba-worker-batch
        component: worker
        workload-type: batch
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: nqba-worker
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: worker-batch
        image: nqba/worker:latest
        imagePullPolicy: Always
        command: ["celery"]
        args: ["-A", "nqba_stack.worker", "worker", "--loglevel=info", "--queues=batch,quantum_batch", "--concurrency=2"]
        ports:
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: WORKER_TYPE
          value: "batch"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: DYNEX_API_KEY
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: dynex-api-key
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: openai-api-key
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"
        - name: CELERY_BROKER_URL
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: CELERY_RESULT_BACKEND
          valueFrom:
            secretKeyRef:
              name: nqba-secrets
              key: redis-url
        - name: PROMETHEUS_MULTIPROC_DIR
          value: "/tmp/prometheus"
        resources:
          requests:
            cpu: 2000m
            memory: 4Gi
          limits:
            cpu: 8000m
            memory: 16Gi
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: prometheus-multiproc
          mountPath: /tmp/prometheus
        - name: worker-data
          mountPath: /app/data
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: tmp
        emptyDir: {}
      - name: prometheus-multiproc
        emptyDir: {}
      - name: worker-data
        emptyDir:
          sizeLimit: 20Gi
      nodeSelector:
        workload-type: batch
      tolerations:
      - key: "spot-instance"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      - key: "batch-workload"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nqba-worker
  namespace: nqba-platform
  labels:
    app: nqba-worker
    component: worker
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/nqba-worker-role

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: nqba-worker
  namespace: nqba-platform
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: nqba-worker

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nqba-worker
  namespace: nqba-platform
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nqba-worker
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 25
        periodSeconds: 120
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 3
        periodSeconds: 60
      selectPolicy: Max